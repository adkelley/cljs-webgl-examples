{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name cljs-webgl.shaders, :imports nil, :requires {shader cljs-webgl.constants.shader, cljs-webgl.constants.shader cljs-webgl.constants.shader, shader-source cljs-webgl.constants.shader-source, cljs-webgl.constants.shader-source cljs-webgl.constants.shader-source}, :uses nil, :defs {get-program-parameter {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :line 5, :column 7, :end-line 5, :end-column 28, :arglists (quote ([gl-context program parameter])), :doc "Returns the value of a given `parameter` in a `program` object.\n\n  Valid values for `parameter` are `cljs-webgl.constants.shader/validate-status`, `cljs-webgl.constants.shader/link-status` and `cljs-webgl.constants.shader/delete-status`.\n\n  Relevant OpenGL ES reference pages:\n\n  * [glGetProgramiv (similar to getProgramParameter)](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glGetProgramiv.xml)"}, :name cljs-webgl.shaders/get-program-parameter, :variadic false, :file "resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :end-column 28, :method-params ([gl-context program parameter]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 3, :fn-var true, :arglists (quote ([gl-context program parameter])), :doc "Returns the value of a given `parameter` in a `program` object.\n\n  Valid values for `parameter` are `cljs-webgl.constants.shader/validate-status`, `cljs-webgl.constants.shader/link-status` and `cljs-webgl.constants.shader/delete-status`.\n\n  Relevant OpenGL ES reference pages:\n\n  * [glGetProgramiv (similar to getProgramParameter)](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glGetProgramiv.xml)"}, create-program {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :line 164, :column 7, :end-line 164, :end-column 21, :arglists (quote ([gl-context & shaders])), :doc "Returns a linked shader program composed of the compiled shader objects\n   specified by the `shaders` parameter. Throws an error if the program was\n   not linked successfully.\n\n  Relevant OpenGL ES reference pages:\n\n  * [glCreateProgram](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glCreateProgram.xml)\n  * [glAttachShader](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glAttachShader.xml)\n  * [glLinkProgram](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glLinkProgram.xml)", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(gl-context shaders)], :arglists ([gl-context & shaders]), :arglists-meta (nil)}}, :name cljs-webgl.shaders/create-program, :variadic true, :file "resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(gl-context shaders)], :arglists ([gl-context & shaders]), :arglists-meta (nil)}, :method-params [(gl-context shaders)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 164, :end-line 164, :max-fixed-arity 1, :fn-var true, :arglists ([gl-context & shaders]), :doc "Returns a linked shader program composed of the compiled shader objects\n   specified by the `shaders` parameter. Throws an error if the program was\n   not linked successfully.\n\n  Relevant OpenGL ES reference pages:\n\n  * [glCreateProgram](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glCreateProgram.xml)\n  * [glAttachShader](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glAttachShader.xml)\n  * [glLinkProgram](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glLinkProgram.xml)"}, get-attrib-location {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :line 78, :column 7, :end-line 78, :end-column 26, :arglists (quote ([gl-context shader-program attrib-name])), :doc "Returns the attribute - specified by it's name - location in a given `shader-program`.\n\n  Relevant OpenGL ES reference pages:\n\n  * [glGetAttribLocation](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glGetAttribLocation.xml)"}, :name cljs-webgl.shaders/get-attrib-location, :variadic false, :file "resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :end-column 26, :method-params ([gl-context shader-program attrib-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 3, :fn-var true, :arglists (quote ([gl-context shader-program attrib-name])), :doc "Returns the attribute - specified by it's name - location in a given `shader-program`.\n\n  Relevant OpenGL ES reference pages:\n\n  * [glGetAttribLocation](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glGetAttribLocation.xml)"}, text-content {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :line 136, :column 17, :end-line 136, :end-column 29, :private true, :arglists (quote ([element])), :doc "Grabs the text content of the element's children"}, :private true, :name cljs-webgl.shaders/text-content, :variadic false, :file "resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :end-column 29, :method-params ([element]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 1, :fn-var true, :arglists (quote ([element])), :doc "Grabs the text content of the element's children"}, create-shader {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :line 114, :column 7, :end-line 114, :end-column 20, :arglists (quote ([gl-context type source])), :doc "Returns a compiled vertex or fragment shader object (specified by the `type` parameter)\n   for a given `source`. If the shader cannot be compiled successfully, an error is thrown.\n\n  The valid values for `type` are `cljs-webgl.constants.shader/vertex-shader` and `cljs-webgl.constants.shader/fragment-shader`.\n\n  Relevant OpenGL ES reference pages:\n\n  * [glCreateShader](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glCreateShader.xml)\n  * [glShaderSource](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glShaderSource.xml)\n  * [glCompileShader](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glCompileShader.xml)"}, :name cljs-webgl.shaders/create-shader, :variadic false, :file "resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :end-column 20, :method-params ([gl-context type source]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 3, :fn-var true, :arglists (quote ([gl-context type source])), :doc "Returns a compiled vertex or fragment shader object (specified by the `type` parameter)\n   for a given `source`. If the shader cannot be compiled successfully, an error is thrown.\n\n  The valid values for `type` are `cljs-webgl.constants.shader/vertex-shader` and `cljs-webgl.constants.shader/fragment-shader`.\n\n  Relevant OpenGL ES reference pages:\n\n  * [glCreateShader](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glCreateShader.xml)\n  * [glShaderSource](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glShaderSource.xml)\n  * [glCompileShader](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glCompileShader.xml)"}, get-shader-parameter {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :line 43, :column 7, :end-line 43, :end-column 27, :arglists (quote ([gl-context shader parameter])), :doc "Returns the value of a given `parameter` in a `shader` object.\n\n  Valid values for `parameter` are `cljs-webgl.constants.shader/shader-type`, `cljs-webgl.constants.shader/compile-status` and `cljs-webgl.constants.shader/delete-status`.\n\n  Relevant OpenGL ES reference pages:\n\n  * [glGetShaderiv(similar to getShaderParameter)](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glGetShaderiv.xml)"}, :name cljs-webgl.shaders/get-shader-parameter, :variadic false, :file "resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :end-column 27, :method-params ([gl-context shader parameter]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 3, :fn-var true, :arglists (quote ([gl-context shader parameter])), :doc "Returns the value of a given `parameter` in a `shader` object.\n\n  Valid values for `parameter` are `cljs-webgl.constants.shader/shader-type`, `cljs-webgl.constants.shader/compile-status` and `cljs-webgl.constants.shader/delete-status`.\n\n  Relevant OpenGL ES reference pages:\n\n  * [glGetShaderiv(similar to getShaderParameter)](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glGetShaderiv.xml)"}, mime-type {:name cljs-webgl.shaders/mime-type, :file "resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :line 150, :column 1, :end-line 150, :end-column 25, :private true, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :line 150, :column 16, :end-line 150, :end-column 25, :private true}, :doc "Mapping of mime/type to relevant GL constant"}, get-uniform-location {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :line 87, :column 7, :end-line 87, :end-column 27, :arglists (quote ([gl-context shader-program uniform-name])), :doc "Returns the uniform - specified by it's name - location in a given `shader-program`.\n\n  Relevant OpenGL ES reference pages:\n\n  * [glGetUniformLocation](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glGetUniformLocation.xml)"}, :name cljs-webgl.shaders/get-uniform-location, :variadic false, :file "resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :end-column 27, :method-params ([gl-context shader-program uniform-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 3, :fn-var true, :arglists (quote ([gl-context shader-program uniform-name])), :doc "Returns the uniform - specified by it's name - location in a given `shader-program`.\n\n  Relevant OpenGL ES reference pages:\n\n  * [glGetUniformLocation](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glGetUniformLocation.xml)"}, get-shader-info-log {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :line 34, :column 7, :end-line 34, :end-column 26, :arglists (quote ([gl-context shader])), :doc "Returns the information log for a given `shader` object. Useful for checking for compile errors.\n\n  Relevant OpenGL ES reference pages:\n\n  * [glGetShaderInfoLog](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glGetShaderInfoLog.xml)"}, :name cljs-webgl.shaders/get-shader-info-log, :variadic false, :file "resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :end-column 26, :method-params ([gl-context shader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl-context shader])), :doc "Returns the information log for a given `shader` object. Useful for checking for compile errors.\n\n  Relevant OpenGL ES reference pages:\n\n  * [glGetShaderInfoLog](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glGetShaderInfoLog.xml)"}, get-shader-precision-format {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :line 54, :column 7, :end-line 54, :end-column 34, :arglists (quote ([gl-context shader-type precision-type])), :doc "Returns a map describing the range and precision for the specified `shader-type` and `precision-type`. The returned map\n  has the following form:\n\n    {:range-min\n     :range-max\n     :precision}\n\n  Valid values for `shader-type` are `cljs-webgl.constants.shader/fragment-shader` and `cljs-webgl.constants.shader/vertex-shader`.\n\n  Valid values for `precision type` are `cljs-webgl.constants.shader-precision-specified-types/low-float`,\n  `cljs-webgl.constants.shader-precision-specified-types/medium-float`,\n  `cljs-webgl.constants.shader-precision-specified-types/high-float`, `cljs-webgl.constants.shader-precision-specified-types/low-int`,\n  `cljs-webgl.constants.shader-precision-specified-types/medium-int` and `cljs-webgl.constants.shader-precision-specified-types/high-int`\n\n  Relevant OpenGL ES reference pages:\n\n  * [glGetShaderPrecisionFormat](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glGetShaderPrecisionFormat.xml)"}, :name cljs-webgl.shaders/get-shader-precision-format, :variadic false, :file "resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :end-column 34, :method-params ([gl-context shader-type precision-type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 3, :fn-var true, :arglists (quote ([gl-context shader-type precision-type])), :doc "Returns a map describing the range and precision for the specified `shader-type` and `precision-type`. The returned map\n  has the following form:\n\n    {:range-min\n     :range-max\n     :precision}\n\n  Valid values for `shader-type` are `cljs-webgl.constants.shader/fragment-shader` and `cljs-webgl.constants.shader/vertex-shader`.\n\n  Valid values for `precision type` are `cljs-webgl.constants.shader-precision-specified-types/low-float`,\n  `cljs-webgl.constants.shader-precision-specified-types/medium-float`,\n  `cljs-webgl.constants.shader-precision-specified-types/high-float`, `cljs-webgl.constants.shader-precision-specified-types/low-int`,\n  `cljs-webgl.constants.shader-precision-specified-types/medium-int` and `cljs-webgl.constants.shader-precision-specified-types/high-int`\n\n  Relevant OpenGL ES reference pages:\n\n  * [glGetShaderPrecisionFormat](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glGetShaderPrecisionFormat.xml)"}, get-attached-shaders {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :line 16, :column 7, :end-line 16, :end-column 27, :arglists (quote ([gl-context program])), :doc "Returns a lazy sequence of shader objects attached to a given shader `program`.\n\n  Relevant OpenGL ES reference pages:\n\n  * [glGetAttachedShaders](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glGetAttachedShaders.xml)"}, :name cljs-webgl.shaders/get-attached-shaders, :variadic false, :file "resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :end-column 27, :method-params ([gl-context program]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl-context program])), :doc "Returns a lazy sequence of shader objects attached to a given shader `program`.\n\n  Relevant OpenGL ES reference pages:\n\n  * [glGetAttachedShaders](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glGetAttachedShaders.xml)"}, get-shader-source {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :line 25, :column 7, :end-line 25, :end-column 24, :arglists (quote ([gl-context shader])), :doc "Returns the source code for a given `shader` object.\n\n  Relevant OpenGL ES reference pages:\n\n  * [glGetShaderSource](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glGetShaderSource.xml)"}, :name cljs-webgl.shaders/get-shader-source, :variadic false, :file "resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :end-column 24, :method-params ([gl-context shader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl-context shader])), :doc "Returns the source code for a given `shader` object.\n\n  Relevant OpenGL ES reference pages:\n\n  * [glGetShaderSource](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glGetShaderSource.xml)"}, is-shader? {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :line 96, :column 7, :end-line 96, :end-column 17, :arglists (quote ([gl-context shader])), :doc "Returns whether a given shader object is valid.\n\n  Relevant OpenGL ES reference pages:\n\n  * [glIsShader](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glIsShader.xml)"}, :name cljs-webgl.shaders/is-shader?, :variadic false, :file "resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :end-column 17, :method-params ([gl-context shader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl-context shader])), :doc "Returns whether a given shader object is valid.\n\n  Relevant OpenGL ES reference pages:\n\n  * [glIsShader](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glIsShader.xml)"}, is-program? {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :line 105, :column 7, :end-line 105, :end-column 18, :arglists (quote ([gl-context shader-program])), :doc "Returns whether a given shader program is valid.\n\n  Relevant OpenGL ES reference pages:\n\n  * [glIsProgram](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glIsProgram.xml)"}, :name cljs-webgl.shaders/is-program?, :variadic false, :file "resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :end-column 18, :method-params ([gl-context shader-program]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl-context shader-program])), :doc "Returns whether a given shader program is valid.\n\n  Relevant OpenGL ES reference pages:\n\n  * [glIsProgram](http://www.khronos.org/opengles/sdk/docs/man/xhtml/glIsProgram.xml)"}, get-shader {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :line 155, :column 7, :end-line 155, :end-column 17, :arglists (quote ([gl-context script-id])), :doc "Returns a compiled vertext or fragment shader, loaded from the script-id"}, :name cljs-webgl.shaders/get-shader, :variadic false, :file "resources/public/js/compiled/out/cljs_webgl/shaders.cljs", :end-column 17, :method-params ([gl-context script-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :end-line 155, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl-context script-id])), :doc "Returns a compiled vertext or fragment shader, loaded from the script-id"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:precision :range-max :range-min}, :order [:range-min :range-max :precision]}, :doc nil}