{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name projection.core, :imports nil, :requires {cljs-webgl.constants.buffer-object cljs-webgl.constants.buffer-object, helpers gl-helpers.core, uniform-type cljs-webgl.constants.uniform-type, cljs-webgl.context cljs-webgl.context, shader cljs-webgl.constants.shader, cljs-webgl.buffers cljs-webgl.buffers, cljs-webgl.constants.capability cljs-webgl.constants.capability, buffer-object cljs-webgl.constants.buffer-object, gl-helpers.core gl-helpers.core, data-type cljs-webgl.constants.data-type, cljs-webgl.constants.shader cljs-webgl.constants.shader, shaders cljs-webgl.shaders, cljs-webgl.constants.data-type cljs-webgl.constants.data-type, capability cljs-webgl.constants.capability, cljs-webgl.shaders cljs-webgl.shaders, geometry.basic-shapes geometry.basic-shapes, cljs-webgl.typed-arrays cljs-webgl.typed-arrays, buffers cljs-webgl.buffers, mat4 mat4, ta cljs-webgl.typed-arrays, draw-mode cljs-webgl.constants.draw-mode, context cljs-webgl.context, cljs-webgl.constants.uniform-type cljs-webgl.constants.uniform-type, cljs-webgl.constants.draw-mode cljs-webgl.constants.draw-mode}, :uses {square geometry.basic-shapes}, :defs {log {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/src/examples/projection.cljs", :line 16, :column 7, :end-line 16, :end-column 10, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name projection.core/log, :variadic true, :file "src/examples/projection.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, vertex-shader-source {:name projection.core/vertex-shader-source, :file "src/examples/projection.cljs", :line 19, :column 1, :end-line 19, :end-column 26, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/src/examples/projection.cljs", :line 19, :column 6, :end-line 19, :end-column 26}}, fragment-shader-source {:name projection.core/fragment-shader-source, :file "src/examples/projection.cljs", :line 31, :column 1, :end-line 31, :end-column 28, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/src/examples/projection.cljs", :line 31, :column 6, :end-line 31, :end-column 28}}, deg->rad {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/src/examples/projection.cljs", :line 40, :column 7, :end-line 40, :end-column 15, :arglists (quote ([degrees]))}, :name projection.core/deg->rad, :variadic false, :file "src/examples/projection.cljs", :end-column 15, :method-params ([degrees]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([degrees]))}, vertex-color {:name projection.core/vertex-color, :file "src/examples/projection.cljs", :line 43, :column 1, :end-line 43, :end-column 22, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/src/examples/projection.cljs", :line 43, :column 10, :end-line 43, :end-column 22}}, ortho-projection-matrix {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/src/examples/projection.cljs", :line 52, :column 7, :end-line 52, :end-column 30, :arglists (quote ([frustrum]))}, :name projection.core/ortho-projection-matrix, :variadic false, :file "src/examples/projection.cljs", :end-column 30, :method-params ([frustrum]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([frustrum]))}, perspective-projection-matrix {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/src/examples/projection.cljs", :line 61, :column 7, :end-line 61, :end-column 36, :arglists (quote ([fov aspect-ratio depth]))}, :name projection.core/perspective-projection-matrix, :variadic false, :file "src/examples/projection.cljs", :end-column 36, :method-params ([fov aspect-ratio depth]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 3, :fn-var true, :arglists (quote ([fov aspect-ratio depth]))}, model-view-matrix {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/src/examples/projection.cljs", :line 67, :column 7, :end-line 67, :end-column 24, :arglists (quote ([t r s]))}, :name projection.core/model-view-matrix, :variadic false, :file "src/examples/projection.cljs", :end-column 24, :method-params ([t r s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 3, :fn-var true, :arglists (quote ([t r s]))}, start {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/src/examples/projection.cljs", :line 77, :column 7, :end-line 77, :end-column 12, :arglists (quote ([tx ty tz]))}, :name projection.core/start, :variadic false, :file "src/examples/projection.cljs", :end-column 12, :method-params ([tx ty tz]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 3, :fn-var true, :arglists (quote ([tx ty tz]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:capabilities :uniforms :name :width :type :components-per-vertex :values :count :draw-mode :mat4 :attributes :location :shader :buffer :height}, :order [:width :height :shader :draw-mode :count :capabilities :attributes :buffer :location :components-per-vertex :type :uniforms :name :values :mat4]}, :doc nil}