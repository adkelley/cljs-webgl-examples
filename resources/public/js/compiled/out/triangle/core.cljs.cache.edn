{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name triangle.core, :imports nil, :requires {cljs-webgl.constants.buffer-object cljs-webgl.constants.buffer-object, uniform-type cljs-webgl.constants.uniform-type, cljs-webgl.context cljs-webgl.context, shader cljs-webgl.constants.shader, cljs-webgl.buffers cljs-webgl.buffers, buffer-object cljs-webgl.constants.buffer-object, data-type cljs-webgl.constants.data-type, cljs-webgl.constants.shader cljs-webgl.constants.shader, shaders cljs-webgl.shaders, cljs-webgl.constants.data-type cljs-webgl.constants.data-type, cljs-webgl.shaders cljs-webgl.shaders, geometry.basic-shapes geometry.basic-shapes, cljs-webgl.typed-arrays cljs-webgl.typed-arrays, buffers cljs-webgl.buffers, ta cljs-webgl.typed-arrays, draw-mode cljs-webgl.constants.draw-mode, context cljs-webgl.context, cljs-webgl.constants.uniform-type cljs-webgl.constants.uniform-type, cljs-webgl.constants.draw-mode cljs-webgl.constants.draw-mode}, :uses {triangle geometry.basic-shapes}, :defs {randomColor {:name triangle.core/randomColor, :file "src/examples/triangle.cljs", :line 14, :column 1, :end-line 14, :end-column 21, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/src/examples/triangle.cljs", :line 14, :column 10, :end-line 14, :end-column 21}}, vertex-shader-source {:name triangle.core/vertex-shader-source, :file "src/examples/triangle.cljs", :line 17, :column 1, :end-line 17, :end-column 26, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/src/examples/triangle.cljs", :line 17, :column 6, :end-line 17, :end-column 26}}, fragment-shader-source {:name triangle.core/fragment-shader-source, :file "src/examples/triangle.cljs", :line 23, :column 1, :end-line 23, :end-column 28, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/src/examples/triangle.cljs", :line 23, :column 6, :end-line 23, :end-column 28}}, log {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/src/examples/triangle.cljs", :line 32, :column 7, :end-line 32, :end-column 10, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name triangle.core/log, :variadic true, :file "src/examples/triangle.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, start {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/src/examples/triangle.cljs", :line 36, :column 7, :end-line 36, :end-column 12, :arglists (quote ([]))}, :name triangle.core/start, :variadic false, :file "src/examples/triangle.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:uniforms :name :type :vec4 :components-per-vertex :values :count :draw-mode :attributes :location :shader :buffer}, :order [:shader :draw-mode :count :attributes :buffer :location :components-per-vertex :type :uniforms :name :values :vec4]}, :doc nil}