{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name examples.core, :imports nil, :requires {projection projection.core, projection.core projection.core, triangle triangle.core, triangle.core triangle.core, r reagent.core, reagent.core reagent.core}, :uses nil, :defs {transform {:name examples.core/transform, :file "src/examples/examples.cljs", :line 10, :column 1, :end-line 10, :end-column 19, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/src/examples/examples.cljs", :line 10, :column 10, :end-line 10, :end-column 19}}, slider {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/src/examples/examples.cljs", :line 14, :column 7, :end-line 14, :end-column 13, :arglists (quote ([param value min max]))}, :name examples.core/slider, :variadic false, :file "src/examples/examples.cljs", :end-column 13, :method-params ([param value min max]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 4, :fn-var true, :arglists (quote ([param value min max]))}, scale-panel {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/src/examples/examples.cljs", :line 25, :column 7, :end-line 25, :end-column 18, :arglists (quote ([]))}, :name examples.core/scale-panel, :variadic false, :file "src/examples/examples.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, translate-panel {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/src/examples/examples.cljs", :line 39, :column 7, :end-line 39, :end-column 22, :arglists (quote ([]))}, :name examples.core/translate-panel, :variadic false, :file "src/examples/examples.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, rotate-panel {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/src/examples/examples.cljs", :line 53, :column 7, :end-line 53, :end-column 19, :arglists (quote ([]))}, :name examples.core/rotate-panel, :variadic false, :file "src/examples/examples.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, transform-panel {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/src/examples/examples.cljs", :line 67, :column 7, :end-line 67, :end-column 22, :arglists (quote ([]))}, :name examples.core/transform-panel, :variadic false, :file "src/examples/examples.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, on-js-reload {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/src/examples/examples.cljs", :line 85, :column 7, :end-line 85, :end-column 19, :arglists (quote ([]))}, :name examples.core/on-js-reload, :variadic false, :file "src/examples/examples.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:min :sz :rx :sy :tz :value :ty :type :div :tx :max :id :class :sx :input :on-change :h3 :rz :ry}, :order [:sz :rx :sy :tz :ty :tx :sx :rz :ry :div :class :input :type :value :min :max :on-change :id :h3]}, :doc nil}