{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name examples.core, :imports nil, :requires {projection projection.core, projection.core projection.core, triangle triangle.core, triangle.core triangle.core, reagent reagent.core, reagent.core reagent.core}, :uses {atom reagent.core}, :defs {app-state {:name examples.core/app-state, :file "src/examples/examples.cljs", :line 10, :column 1, :end-line 10, :end-column 19, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/src/examples/examples.cljs", :line 10, :column 10, :end-line 10, :end-column 19}}, control-panel {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/src/examples/examples.cljs", :line 12, :column 7, :end-line 12, :end-column 20, :arglists (quote ([]))}, :name examples.core/control-panel, :variadic false, :file "src/examples/examples.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, on-js-reload {:protocol-inline nil, :meta {:file "/Users/alexkelley/Dropbox/cs/webgl/cljs-webgl-examples/src/examples/examples.cljs", :line 19, :column 7, :end-line 19, :end-column 19, :arglists (quote ([]))}, :name examples.core/on-js-reload, :variadic false, :file "src/examples/examples.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:tz :ty :tx :h1}, :order [:tx :ty :tz :h1]}, :doc nil}